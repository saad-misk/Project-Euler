#include <bits/stdc++.h>

#define  int   long long 
#define  all(x)   (x).begin(), (x).end()
#define  f   first
#define  s   second

const int N = 1e5 + 1;

using namespace std;
/*
75 00 00 00 00 00 00 00 00 00 00 00 00 00 00
95 64 00 00 00 00 00 00 00 00 00 00 00 00 00
17 47 82 00 00 00 00 00 00 00 00 00 00 00 00
18 35 87 10 00 00 00 00 00 00 00 00 00 00 00 
20 04 82 47 65 00 00 00 00 00 00 00 00 00 00
19 01 23 75 03 34 00 00 00 00 00 00 00 00 00
88 02 77 73 07 63 67 00 00 00 00 00 00 00 00
99 65 04 28 06 16 70 92 00 00 00 00 00 00 00 
41 41 26 56 83 40 80 70 33 00 00 00 00 00 00 
41 48 72 33 47 32 37 16 94 29 00 00 00 00 00 
53 71 44 65 25 43 91 52 97 51 14 00 00 00 00
70 11 33 28 77 73 17 78 39 68 17 57 00 00 00
91 71 52 38 17 14 91 43 58 50 27 29 48 00 00
63 66 04 68 89 53 67 30 73 16 69 87 40 31 00
04 62 98 27 23 09 70 98 73 93 38 53 60 04 23
*/
int maxpath(int i, int j, int n, int m, int sum, vector< vector<int> > &v){
    //cout << sum << '\n';
    if( v[i][j] == 0 ) return 0;
    if( i == n-1 ) return sum + v[i][j];
    return max( maxpath(i+1, j, n, m, sum+v[i][j], v), maxpath(i+1, j+1, n, m, sum+v[i][j], v) );
}

void solve(){
    vector< vector<int> > v(15, vector<int>(15));
    for( auto& i : v ){
        for( auto& j : i ){
            cin >> j;
        }
    }
    cout << maxpath(0, 0, 15, 15, 0, v) << '\n';
    
}

int32_t main()
{
    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
    
        // #ifndef ONLINE_JUDGE
        // freopen("input.txt","r",stdin);
        // freopen("output.txt","w",stdout);   
        // #endif

    int t = 1;  //cin >> t;
    while( t-- ){
        solve();
    }

    return 0;
}
